<?php

function gcal_importer_menu() {

  $items = array();

  $items['test'] = array(
    'type' => MENU_CALLBACK,
    'page callback' => 'gcal_importer_page2',
    'access arguments' => array('access content'),
  );
  
  return $items;

}


function gcal_importer_page2() {
    //phpinfo(); exit;
    
    ini_set('memory_limit', '512M');
    $autoload_path = libraries_get_path('google-api-php-client') . '/vendor/autoload.php';
    if (!file_exists($autoload_path)) {
        drupal_set_message('The google-api-php-client library was not found.', 'error');
        return;
    }
    include_once($autoload_path);
    
    $client = new Google_Client();
    $client->setApplicationName('nysim-calendar-test');
    $client->setDeveloperKey('AIzaSyBEG7Eo9vY9cm-1ggUBoX-RanspfYdzGxk');

    $service = new Google_Service_Calendar($client);

    $out = '';
    $out .= '123';
    
    //$calendar_id = 'tjnv67uabdhnl0s9mb23i8dvhg@group.calendar.google.com';
    $calendar_id = 'svg5r258e34u0gneoohvvekge8@group.calendar.google.com';
    $sync_tokens = variable_get('gcal_importer_sync_tokens', array());
    
    $global_params = array(
        //'singleEvents' => 'true',
        'showDeleted' => 'true',
        //'timeZone' => 'GMT',
    );
    
    $i = 0;
    try {
        while(true) {
            $opt_params = $global_params;
            if (isset($sync_tokens[$calendar_id])) {
                $opt_params['syncToken'] = $sync_tokens[$calendar_id];  
            }
            $events = $service->events->listEvents($calendar_id, $opt_params);    
            dsm($events);
            
            foreach ($events->getItems() as $event) {
                
                
                $query = db_select('node', 'n');
                $query->condition('n.gcal_sync_id', $event->getId());
                $query->addField('n', 'nid');
                $result = $query->execute();
                
                if ($nid = $result->fetchField()) {
                    $node = node_load($nid);    
                } else {
                    $node = new stdClass();
                    $node->gcal_sync_id = $event->getId();
                    $node->type = 'event';
                    node_object_prepare($node); 
                    $node->language = LANGUAGE_NONE;
                    $node->uid = 1;
                    $node->promote = 0;
                    $node->comment = 0;
                }
                
                $node->title = $event->getSummary();
                $node->status = ($event->getStatus() == 'confirmed') ? 1 : 0;
 
                $start = $event->getStart();
                $end = $event->getEnd();
                $allday = !empty($start->date);
                $date = !empty($start->date) ? $start->date : $start->dateTime;
                $gcal_time = !empty($start->dateTime) ? $start->dateTime : '';
                if ($allday) {
                  $gcal_endtime = !empty($end->date) ? $end->date : '';
                } else {
                  $gcal_endtime = !empty($end->dateTime) ? $end->dateTime : '';
                }
                
                $node->field_date[LANGUAGE_NONE][0] = array(
                    'value' => format_date(strtotime($gcal_time), 'custom', 'Y-m-d H:i:s', 'GMT'),
                    'value2' => format_date(strtotime($gcal_endtime), 'custom', 'Y-m-d H:i:s', 'GMT'),
                    'timezone' => 'America/New_York',  
                    'timezone_db' => 'America/New_York',
                );
                
                $node = node_submit($node);
                node_save($node);
                                
                drupal_set_message( "Node with nid " . $node->nid . " saved!\n");

                $out .= $i++ . $event->getSummary() . '<br>';
                $out .= '<pre>' . print_r($event, true) .'</pre>';
            }

            if ($pageToken = $events->getNextPageToken()) {
                $opt_params['pageToken'] = $pageToken;
            } else {
                if ($syncToken = $events->getNextSyncToken()) {
                    $sync_tokens[$calendar_id] = $syncToken;
                    variable_set('gcal_importer_sync_tokens', $sync_tokens);
                }
                break;
            }

        }
    }
    catch (Exception $e) {
        drupal_set_message(t('Error '.$e), 'error');
    }
    
    return $out;
}

function gcal_importer_views_pre_view(&$view) {
    //dsm($view);
     //if ($view->name == 'calendar') gcal_importer_page();
}

